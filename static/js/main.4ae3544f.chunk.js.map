{"version":3,"sources":["Components/Heading.js","Components/Loader.js","Components/UnsplashImage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Styled","header","H1","h1","Heading","Loading","div","Loader","class","Img","img","UnsplashImage","url","key","className","src","alt","WrapperImage","createGlobalStyle","section","App","useState","images","setImages","useEffect","fetchImages","axios","get","process","then","res","data","dataLength","length","next","hasMore","loader","map","image","urls","small","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAGMA,EAASC,IAAOC,OAAV,oGAMNC,EAAKF,IAAOG,GAAV,qFAKKC,EAAU,WACnB,OACI,eAACL,EAAD,WACI,cAACG,EAAD,uBACA,oFACA,oEChBNG,EAAUL,IAAOM,IAAV,mqCA4DAC,EAAS,WAClB,OACG,cAACF,EAAD,UACA,sBAAKG,MAAM,eAAX,UAA0B,wBAAW,wBAAW,wBAAW,8BC/D5DC,EAAKT,IAAOU,IAAT,uSAcIC,EAAgB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,IAAKC,EAAS,EAATA,IAChC,OACI,8BACI,cAACJ,EAAD,CAAKK,UAAU,QAAQC,IAAKH,EAAeI,IAAI,SAATH,M,yBCG5CI,GAZcC,YAAH,4JAYIlB,IAAOmB,QAAV,0LA4CHC,MAnCf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAc,WAIlBC,IAAMC,IAAN,UAHgB,2BAGhB,oCAFiBC,8CAEjB,cACCC,MAAK,SAAAC,GAAG,OAAIP,EAAU,GAAD,mBAAKD,GAAL,YAAgBQ,EAAIC,YAG5C,OACE,sBAAKjB,UAAU,MAAf,UACA,sCACC,cAAC,EAAD,IACG,cAAC,IAAD,CACIkB,WAAYV,EAAOW,OACnBC,KAAMT,EACNU,SAAS,EACTC,OAAS,cAAC,EAAD,IAJb,SAMC,cAACnB,EAAD,UACMK,EAAOe,KAAI,SAAAC,GAAK,OAChB,cAAC,EAAD,CAAe1B,IAAK0B,EAAMC,KAAKC,OAAYF,EAAMG,eC/CjDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4ae3544f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Styled from 'styled-components';\r\n\r\nconst Header = Styled.header`\r\n    max-width: 70rem;\r\n    margin: 2rem auto;\r\n    text-align: center;\r\n`;\r\n\r\nconst H1 = Styled.h1`\r\nfont-family: 'Oswald', sans-serif;\r\nmargin-bottom: 1em;\r\n`; \r\n\r\nexport const Heading = () => {\r\n    return (\r\n        <Header>\r\n            <H1>Unsplash</H1>\r\n            <p>The internetâ€™s source of freely-usable images.</p>\r\n            <p>Powered by creators everywhere.</p>\r\n        </Header>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Styled from 'styled-components';\r\n\r\nconst Loading = Styled.div`\r\n    text-align: center;\r\n\r\n.lds-ellipsis {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n  .lds-ellipsis div {\r\n    position: absolute;\r\n    top: 33px;\r\n    width: 13px;\r\n    height: 13px;\r\n    border-radius: 50%;\r\n    background: #222;\r\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n  }\r\n  .lds-ellipsis div:nth-child(1) {\r\n    left: 8px;\r\n    animation: lds-ellipsis1 0.6s infinite;\r\n  }\r\n  .lds-ellipsis div:nth-child(2) {\r\n    left: 8px;\r\n    animation: lds-ellipsis2 0.6s infinite;\r\n  }\r\n  .lds-ellipsis div:nth-child(3) {\r\n    left: 32px;\r\n    animation: lds-ellipsis2 0.6s infinite;\r\n  }\r\n  .lds-ellipsis div:nth-child(4) {\r\n    left: 56px;\r\n    animation: lds-ellipsis3 0.6s infinite;\r\n  }\r\n  @keyframes lds-ellipsis1 {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n  @keyframes lds-ellipsis3 {\r\n    0% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n  @keyframes lds-ellipsis2 {\r\n    0% {\r\n      transform: translate(0, 0);\r\n    }\r\n    100% {\r\n      transform: translate(24px, 0);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Loader = () => {\r\n    return (\r\n       <Loading>\r\n       <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n       </Loading>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Styled from 'styled-components';\r\n\r\nconst Img =Styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    border-radius: 3%; \r\n    transition: transform .2s;\r\n\r\n    &:hover {\r\n    -ms-transform: scale(1.2); /* IE 9 */\r\n    -webkit-transform: scale(1.2); /* Safari 3-8 */\r\n    transform: scale(1.2); \r\n    }\r\n`;\r\n\r\nexport const UnsplashImage = ({url, key}) => {\r\n    return (\r\n        <div>\r\n            <Img className=\"image\" src={url} key={key} alt=\"image\"/>         \r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\nimport React, {useState, useEffect} from 'react';\nimport {Heading} from './Components/Heading';\nimport {Loader} from './Components/Loader';\nimport {UnsplashImage} from './Components/UnsplashImage';\nimport axios from 'axios';\nimport Styled, { createGlobalStyle } from 'styled-components';\nimport InfinityScroll from 'react-infinite-scroll-component';\n\n\n//style\nconst GlobalStyle = createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body{\n    font-family:'Oswald', sans-serif;\n  }\n`;\n\nconst WrapperImage = Styled.section`\nmax-width: 70rem;\nmargin: 4rem auto;\ndisplay: grid;\ngrid-gap: 1em;\ngrid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\ngrid-auto-rows: 300px;\n`;\n\nfunction App() {\n  const [images, setImages] = useState([]);\n\n  useEffect(()=> {\n    fetchImages(); \n  }, [])\n\n  const fetchImages = () => {\n    const APIRoot = \"https://api.unsplash.com\";\n    const ClientId = process.env.REACT_APP_CLIENT_ID;\n\n    axios.get(`${APIRoot}/photos/random?client_id=${ClientId}&count=12`)\n    .then(res => setImages([...images, ...res.data]));\n  }\n\n  return (\n    <div className=\"App\">\n    <createGlobalStyle/>\n     <Heading/>\n        <InfinityScroll\n            dataLength={images.length}\n            next={fetchImages}\n            hasMore={true}\n            loader={ <Loader/>}\n        >\n         <WrapperImage>\n              {images.map(image => (\n               <UnsplashImage url={image.urls.small} key={image.id}/>\n             ))}\n         </WrapperImage>\n        </InfinityScroll>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}